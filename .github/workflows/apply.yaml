name: Terraform Workflow
env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform: apply or destroy'
        required: true
        default: 'apply'
      dashboard_name:
        description: 'Name of the dashboard to delete (only required for destroy action)'
        required: false

jobs:
  terraform_apply:
    if: ${{ github.event_name == 'push' || github.event.inputs.action == 'apply' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan
        
      - name: Terraform Apply - Auto-Approve
        run: terraform apply -auto-approve

  terraform_destroy:
    if: ${{ github.event.inputs.action == 'destroy' && github.event.inputs.dashboard_name != '' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Print Inputs for Debugging
        run: |
          echo "Action: ${{ github.event.inputs.action }}"
          echo "Dashboard Name: ${{ github.event.inputs.dashboard_name }}"

      - name: Set Dashboard Name
        run: echo "dashboard_name=${{ github.event.inputs.dashboard_name }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan Destroy
        run: terraform plan -destroy -target="dashboard.${{ env.dashboard_name }}"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -target="dashboard.${{ env.dashboard_name }}"

